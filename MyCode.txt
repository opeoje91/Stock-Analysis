Sub MacroCheck()

    Dim testMessage As String

    testMessage = "Hello World!"

    MsgBox (testMessage)

End Sub

Sub DQAnalysis()

    Worksheets("DQ Analysis").Activate
    
    Range("A1").Value = "DAQO (Ticker: DQ)"
    
    Cells(3, 1).Value = "Year"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"
 
End Sub
Sub DQRangeCellAnalysis()
    Worksheets("DQRangeCell Analysis").Activate
     
    Range("A1").Value = "DAQO (Ticker: DQ)"
   
End Sub
Sub DQCellAnalysis()
    Worksheets("DQCell Analysis").Activate
    
    Cells(3, 1).Value = "Year"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"

End Sub
Sub DQRangeAnalysis()

    Worksheets("DQRangeAnalysis").Activate
    Range("A1").Value = "DAQO (Ticker: DQ)"
End Sub

 ### 030821###
Sub DQANALYSIS()
    Worksheets("DQ ANALYSIS").Activate
    
    Range("A1").Value = "DAQO (Ticker: DQ)"

    'Create a header row
    Cells(3, 1).Value = "Year"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"

    rowStart = 2
    rowEnd = 3013
    totalVolume = 0

    For i = rowStart To rowEnd
    'increase totalVolume
    totalVolume = totalVolume + Cells(i, 8).Value

    Next i
    Worksheets("2018").Activate

    For i = rowStart To rowEnd
        'increase totalVolume if ticker is "DQ"
        If Cells(i, 1).Value = "DQ" Then
            totalVolume = totalVolume + Cells(i, 8).Value
        End If
    Next i
    'MsgBox (totalVolume)

    Worksheets("DQ Analysis").Activate
    Cells(4, 1).Value = 2018
    Cells(4, 2).Value = totalVolume
End Sub



Sub AllStocksAnalysis()
    'Format the output sheet on the "All Stock Analysis" worksheet
         Worksheets("All Stocks Analysis").Activate
           
           Range("A1").Value = "All Stocks (2018)"
           
           'create header rows
            Cells(3, 1).Value = "Ticker"
            Cells(3, 2).Value = "Total Daily Volume"
            Cells(3, 3).Value = "Return"
    
     'Initialize an array of all tickers.
        
            'Array to hold 12 Tickers
             Dim tickers(12) As String
             
             'Prepare for the analysis of tickers.
            tickers(0) = "AY"
            tickers(1) = "CSIQ"
            tickers(2) = "DQ"
            tickers(3) = "ENPH"
            tickers(4) = "FSLR"
            tickers(5) = "HASI"
            tickers(6) = "JKS"
            tickers(7) = "RUN"
            tickers(8) = "SEDG"
            tickers(9) = "SPWR"
            tickers(10) = "TERP"
            tickers(11) = "VSLR"
     
     
          
     'Initialize variables for the starting price and ending price.
     
        Dim startingPrice As Single
        Dim endingPrice As Single
        
     
     'Activate the data worksheet.
         Worksheets("2018").Activate
     
     'Find the number of rows to loop over.
        
        RowCount = Cells(Rows.Count, "A").End(xlUp).Row
        
     'Loop through the tickers.
        For i = 0 To 11
            ticker = tickers(i)
            totalVolume = 0
     
     'Loop through rows in the data.
        Worksheets("2018").Activate
        
        For j = 2 To RowCount
     
     'Find the total volume for the current ticker.
        If Cells(j, 1).Value = ticker Then
            
            totalVolume = totalVolume + Cells(j, 8).Value
            
        End If
     
     'Find the starting price for the current ticker.
        
        If Cells(j - 1, 1).Value <> ticker And Cells(j, 1).Value = ticker Then
            
            startingPrice = Cells(j, 6).Value
            
        End If
     
     'Find the ending price for the current ticker.
     
        If Cells(j + 1, 1).Value <> ticker And Cells(j, 1).Value = ticker Then
        
            endingPrice = Cells(j, 6).Value
        
        End If
    
    Next j
     
     
     'Output the data for the current ticker.
     
     Worksheets("All Stocks Analysis").Activate
     
        Cells(4 + i, 1).Value = ticker
        Cells(4 + i, 2).Value = totalVolume
        Cells(4 + i, 3).Value = endingPrice / startingPrice - 1
        
        
    Next i
   
End Sub

Sub formatAllStocksAnalysisTable()

    'Formatting
    Worksheets("All Stocks Analysis").Activate
    
     'Select the header range and make the text bold
     Range("A3:C3").Font.Bold = True
     
     'add a border to the bottom edge
     Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous

    'Select the header range and make the text bigger
     Range("A3:C3").Font.FontStyle = "Bold Italic"
     
     'Select the header range and make the text color "Purple"
      Range("A3:C3").Font.Color = RGB(192, 32, 255)
      
      'Add one more digit of precision to the return percentage
      Range("B4:B15").NumberFormat = "#,##0"
         
    
     'make a single-digit percentage for the return
     Range("C4:C15").NumberFormat = "0.0%"
    
      'change the width of a column to auto-fit the data
      Columns("B").AutoFit
        
        'set the color of the cell at row 4, column 3 to green,
        Cells(4, 3).Interior.Color = vbGreen
        
        'clear the cell at row 4, column 3
        Cells(4, 3).Interior.Color = xlNone
        
        'color the cell green, create an if-then block that checks if the value is greater than zero.
        If Cells(4, 3) > 0 Then
             'Color the cell green
              Cells(4, 3).Interior.Color = vbGreen
        
        'Then, add an elseif block to check if the cell is less than zero
        
            ElseIf Cells(4, 3) < 0 Then

                'Color the cell red
                Cells(4, 3).Interior.Color = vbRed

        'add an else block to clear the cell if the value is neither positive nor negative.
        
             Else
                 'Clear the cell color
                    Cells(4, 3).Interior.Color = xlNone
                    
        End If
                    
        'create two new variables to hold dataRowStart and dataRowEnd
            
            dataRowStart = 4
            dataRowEnd = 15
            For i = dataRowStart To dataRowEnd

                'replace the row number with the iterator
                ' check if the cell is greater than zero. If so, change the color to green
                If Cells(i, 3) > 0 Then

                    'Change cell color to green
                     Cells(i, 3).Interior.Color = vbGreen
                     
            
                'Then, check if the cell is less than zero. If so, change the color to red
                ElseIf Cells(i, 3) < 0 Then

                     'Change cell color to red
                     Cells(i, 3).Interior.Color = vbRed
                     
                'if neither condition is true, clear the cell color.
                 Else

                         'Clear the cell color
                         Cells(i, 3).Interior.Color = xlNone
    
    
    
    
                 End If
                
        Next i


   

End Sub

Sub nesteddrill()

    Worksheets("nested drill").Activate
    
        'define variables
        rowNumber = 8
        colNumber = 8
        
        'Create a for loop from 1 to 8
        For i = 1 To rowNumber
            ' Use the modulus function to determine if a number is not divisible by 2 (odd number)
            For j = 1 To colNumber
        
                ' Use the modulus function to determine if a number is divisible by 2 (even number)
                If (i + j) Mod 2 = 0 Then
               'a line of code here will evaluate true
                    Cells(i, j).Value = "True"
                        'Change cell color to red
                         Cells(i, j).Interior.Color = vbGreen
                Else
                'a line of code will evaluate False
                    Cells(i, j).Value = "False"
                    
                        'Change cell color to red
                         Cells(i, j).Interior.Color = vbRed
           End If
           
        Next j
        
      Next i


End Sub










